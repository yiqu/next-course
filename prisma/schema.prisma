// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id              String            @id @default(auto()) @map("_id") @db.ObjectId
  name            String            @unique
  expenses        Expense[]
  shown           Boolean           @default(false)
  dateAdded       DateTime          @default(now())
  updatedAt       DateTime?         @updatedAt
  dateAddedEpoch  Int
  updatedAtEpoch  Int
  User            User?             @relation(fields: [userId], references: [id])
  userId          String?           @db.ObjectId
  category        Category?         @relation(fields: [categoryId], references: [id])
  categoryId      String?           @db.ObjectId
  AccountComments AccountComments[]
}

model Expense {
  id             String            @id @default(auto()) @map("_id") @db.ObjectId
  amount         Float
  date           Int
  dateAdded      DateTime          @default(now())
  updatedAt      DateTime?         @updatedAt
  addedAtEpoch   Int
  updatedAtEpoch Int
  account        Account           @relation(fields: [accountId], references: [id])
  accountId      String            @db.ObjectId
  comments       ExpenseComments[]
}

model Category {
  id        String             @id @default(auto()) @map("_id") @db.ObjectId
  name      String             @unique
  shown     Boolean            @default(true)
  disabled  Boolean            @default(false)
  dateAdded DateTime           @default(now())
  updatedAt DateTime?          @updatedAt
  accounts  Account[]
  comments  CategoryComments[]
}

model DataSettings {
  id                    String             @id @default(auto()) @map("_id") @db.ObjectId
  userId                String             @unique
  dateAdded             DateTime           @default(now())
  updatedAt             DateTime?          @updatedAt
  addAnotherAfterSubmit Boolean
  defaultAccountIdToAdd String
  showDashboardChart    Boolean
  dashboardChartType    DashboardChartType @default(bar)
  dashboardCount        Int                @default(10)
}

model AccountSettings {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String    @unique
  password  String
  dateAdded DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  accounts  Account[]
}

model ExpenseComments {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  dateAdded DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  expense   Expense   @relation(fields: [expenseId], references: [id])
  expenseId String    @db.ObjectId
}

model CategoryComments {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  comment    String
  dateAdded  DateTime  @default(now())
  updatedAt  DateTime? @updatedAt
  category   Category  @relation(fields: [categoryId], references: [id])
  categoryId String    @db.ObjectId
}

model AccountComments {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  comment   String
  dateAdded DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  account   Account   @relation(fields: [accountId], references: [id])
  accountId String    @db.ObjectId
}

enum DashboardChartType {
  bar
  line
}
